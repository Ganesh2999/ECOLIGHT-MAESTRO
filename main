#include <LPC21xx.h>
#include "type.h"
#include "pins_main.h"
#include "defines.h"
#include "adc.h"
#include "kpm.h"
#include "delay.h"
#include "Lcd.h"
#include "rtc.h"
#include "mini_inte.h"
#include "lcd_define.h"
volatile u32 eint0_flag = 0;
volatile u8 in_menu = 0;
#define button 16
s32 hour, min, sec, date, month, year, day;
#define SLED 1

    u32 adcVal;
   // float eAR;

int main()
{

     Init_kpm();
   Init_LCD();
	  Init_ADC();
	RTC_Init();
    //delay_ms(1);
    enable_eint0();
	  IODIR0|=0X0F<<SLED;
	  //IOCLR0=1<<SLED;
    // Initial display
	SetRTCTimeInfo(0,27,40);
    GetRTCTimeInfo(&hour, &min, &sec);
    DisplayRTCTime(hour, min, sec);
    GetRTCDateInfo(&date, &month, &year);
    DisplayRTCDate(date, month, year);
    GetRTCDay(&day);
    DisplayRTCDay(day);
while(1) {
	      Read_ADC(1, &adcVal);			// adjust channel if needed
			 CmdLCD(GOTO_LINE2_POS0+12);
			  u32lcd(adcVal);
    // Auto streetlight logic
     if((hour>=18&&hour<=23)||(hour>=0&&hour<= 6))
			{
        if(adcVal>101){  
            IOSET0=0X0F<<SLED;   // Turn ON LED in dark
        } else {
            IOCLR0=0X0F<<SLED;   // Turn OFF LED in light
        }
    }
			else {
        IOCLR0 = 0x0F << SLED;       // Daytime: force LED off
			}

    // Handle external interrupt for menu
    if(eint0_flag) {
         
        handleMenu();
        eint0_flag = 0;
   
    } else {
        
            GetRTCTimeInfo(&hour, &min, &sec);
            DisplayRTCTime(hour, min, sec);
            GetRTCDateInfo(&date, &month, &year);
            DisplayRTCDate(date, month, year);
            GetRTCDay(&day);
            DisplayRTCDay(day);
        }
    

    delay_ms(100);
}
}



